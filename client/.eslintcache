[{"C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\App.js":"2","C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\components\\NavBar.js":"3","C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\components\\Pages\\Contact.js":"4","C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\components\\Pages\\About.js":"5","C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\components\\Pages\\Home.js":"6","C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\components\\Pages\\Blog.js":"7","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\index.js":"8","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\App.js":"9","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Contact.js":"10","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\About.js":"11","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\NavBar.js":"12","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Blog.js":"13","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Update.js":"14","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Home.js":"15","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Cblog.js":"16","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Login.js":"17","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\redux\\Store.js":"18","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\redux\\Action.js":"19","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\redux\\RootReducer.js":"20","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\redux\\Reducer.js":"21"},{"size":236,"mtime":1664780018510,"results":"22","hashOfConfig":"23"},{"size":792,"mtime":1664779424352,"results":"24","hashOfConfig":"23"},{"size":2056,"mtime":1664779875906,"results":"25","hashOfConfig":"23"},{"size":134,"mtime":1664779424355,"results":"26","hashOfConfig":"23"},{"size":127,"mtime":1664779424354,"results":"27","hashOfConfig":"23"},{"size":125,"mtime":1664779424355,"results":"28","hashOfConfig":"23"},{"size":125,"mtime":1664779424354,"results":"29","hashOfConfig":"23"},{"size":331,"mtime":1667149135112,"results":"30","hashOfConfig":"31"},{"size":1365,"mtime":1666869030336,"results":"32","hashOfConfig":"31"},{"size":585,"mtime":1666500878410,"results":"33","hashOfConfig":"31"},{"size":168,"mtime":1665992897777,"results":"34","hashOfConfig":"31"},{"size":2077,"mtime":1667154976095,"results":"35","hashOfConfig":"31"},{"size":2488,"mtime":1667146782824,"results":"36","hashOfConfig":"31"},{"size":3932,"mtime":1666294068972,"results":"37","hashOfConfig":"31"},{"size":2743,"mtime":1667149234029,"results":"38","hashOfConfig":"31"},{"size":3253,"mtime":1666860458205,"results":"39","hashOfConfig":"31"},{"size":2108,"mtime":1667151439952,"results":"40","hashOfConfig":"31"},{"size":191,"mtime":1667152738818,"results":"41","hashOfConfig":"31"},{"size":188,"mtime":1667151231976,"results":"42","hashOfConfig":"31"},{"size":132,"mtime":1667152629521,"results":"43","hashOfConfig":"31"},{"size":224,"mtime":1667152784501,"results":"44","hashOfConfig":"31"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wzb8hx",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8pfzv",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\index.js",[],"C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\App.js",[],"C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\components\\NavBar.js",[],"C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\components\\Pages\\Contact.js",[],"C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\components\\Pages\\About.js",[],"C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\components\\Pages\\Home.js",[],"C:\\Users\\Dell\\Desktop\\golam_login\\React-responsive-navbar\\src\\components\\Pages\\Blog.js",[],"C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\index.js",[],"C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\App.js",["96"],"import \"./App.css\";\r\nimport React, { useState, createContext} from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport  Home  from \"./components/Pages/Home\";\r\nimport { About } from \"./components/Pages/About\";\r\nimport  Blog  from \"./components/Pages/Blog\";\r\nimport  Contact  from \"./components/Pages/Contact\";\r\nimport  Login from \"./components/Pages/Login\";\r\nimport  Cblog from \"./components/Pages/Cblog\";\r\nimport Update from \"./components/Pages/Update\"\r\n\r\nexport const GlobalInfo = createContext();\r\n\r\nfunction App() {\r\n  \r\n  function loginData(item){\r\n    console.warn(item)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <NavBar />\r\n\r\n        <div className=\"pages\">\r\n          <Switch>\r\n          <GlobalInfo.Provider value={{logindata : loginData}} >\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/blog\" component={Blog} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/cblog\" component={Cblog} />\r\n            <Route path=\"/update\" component={Update} />\r\n            </GlobalInfo.Provider>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["97","98"],"C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Contact.js",[],"C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\About.js",["99"],"import React from \"react\";\r\nimport pic from \"./image/coding.gif\"\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div>\r\n      <img src={pic} />\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\NavBar.js",["100"],"import React, { useState} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\nimport {useSelector} from \"react-redux\"\r\n\r\n\r\nfunction NavBar() {\r\n  const [click, setClick] = useState(false);\r\n  const token = localStorage.getItem('authortoken')\r\n  const result = useSelector(state => state)\r\n\r\n\r\n  console.warn(\"data In Navbar\" ,result)\r\n  console.warn(\"author id.in Navabar\" , result.authorId)\r\n \r\n\r\n \r\n  \r\n\r\n  const handleClick = () => setClick(!click);\r\n  return (\r\n    <>\r\n    \r\n      <nav className=\"navbar\">\r\n        <div className=\"nav-container\">\r\n          <NavLink exact to=\"/\" className=\"nav-logo\">\r\n            JayVision\r\n            <i className=\"fas fa-code\"></i>\r\n          </NavLink>\r\n\r\n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/\"\r\n                activeClassName=\"active\"\r\n                className=\"nav-links\"\r\n                onClick={handleClick}\r\n              >\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n           \r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to=\"/blog\"\r\n                activeClassName=\"active\"\r\n                className=\"nav-links\"\r\n                onClick={handleClick}\r\n              >\r\n                Blog\r\n              </NavLink>\r\n            </li>\r\n            \r\n        \r\n            <li className=\"nav-item\">\r\n            <select name=\"cars\" id=\"cars\">\r\n              <option value=\"name\">Name</option>\r\n              <option value=\"email\">email</option>\r\n              <option value=\"id\">id </option>\r\n              <option>Logout</option>\r\n            </select>\r\n              </li> \r\n                \r\n                \r\n\r\n          </ul>      \r\n          <div className=\"nav-icon\" onClick={handleClick}>\r\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Blog.js",[],"C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Update.js",["101","102"],"import React,{useEffect, useState} from 'react'\r\nimport pic from \"./image/superman.gif\"\r\nimport \"../../App.css\"\r\n\r\n\r\n\r\nfunction Update() {\r\n    const [post, setPost] = useState([]);\r\n    \r\n    const[blogId,setBlogId] = useState('')\r\n    const[title,setTitle] = useState('')\r\n    const[body,setBody] = useState('')\r\n    const[authorId,setAuthorid] = useState('')\r\n    const[tags,setTags] = useState([])\r\n    const[category,setCategory] = useState('')\r\n    const[subcategory,setSubcategory] = useState([])\r\n    const[isPublished,setIspublished] = useState('')\r\n\r\n    \r\n  \r\n    useEffect(()=>{ \r\n     getList();\r\n    },[])\r\n  \r\n    function getList(){\r\n      fetch(\"http://localhost:4000/blog\").then((result)=>{result.json().then((resp)=>{\r\n        setPost(resp.data)\r\n        console.log(resp.data)\r\n        setTitle(resp.data[0].title)\r\n        setBody(resp.data[0].body)\r\n        setAuthorid(resp.data[0].authorId)\r\n        setTags(resp.data[0].tags)\r\n        setCategory(resp.data[0].category)\r\n        setSubcategory(resp.data[0].subcategory)\r\n        setIspublished(resp.data[0].isPublished)\r\n      })\r\n    })\r\n    }\r\n\r\n   \r\n\r\n    function Update(){\r\n      \r\n      let data  = {blogId ,title ,body, authorId, tags, category, subcategory, isPublished}\r\n      console.warn(blogId, title ,body, authorId, tags, category, subcategory, isPublished)\r\n  \r\n      let token = localStorage.getItem('authortoken')\r\n      console.log(\"cblog\" , token)\r\n      console.log(\"data\", data)\r\n  \r\n      fetch(\"http://localhost:4000/blogs/\"+blogId,{\r\n        method : \"PUT\",\r\n        headers : {\r\n          \"Accept\" : \"application/json\",\r\n          \"Content-Type\" : \"application/json\",\r\n          \"x-api-key\" : token\r\n        },\r\n        body : JSON.stringify(data)\r\n      }).then((result) =>{\r\n        result.json().then((resp) =>{\r\n          console.warn(\"resp\" , resp)\r\n  \r\n          if(resp.status === true){\r\n            window.alert(resp.message );\r\n            console.log( resp.message );\r\n            \r\n              \r\n          } else{\r\n  \r\n            window.alert( resp.message)\r\n              console.log('invalid data', resp)\r\n          }\r\n        })\r\n      })\r\n      \r\n    }\r\n     \r\n     \r\n     \r\n       \r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"div1\"><img src={pic} /></div>\r\n      <div className=\"div2\">\r\n      <form >\r\n      <label>\r\n        BlogId :  \r\n           <input type=\"text\"  value={blogId} onChange={(e) => setBlogId(e.target.value) } name=\"title\"/>\r\n        </label><br></br>\r\n\r\n        <label>\r\n        title :  \r\n           <input type=\"text\"  value={title} onChange={(e) => setTitle(e.target.value) } name=\"title\"/>\r\n        </label><br></br>\r\n\r\n        <label>\r\n        Body :  \r\n           <textarea type=\"text\" name=\"body\" value={body} onChange={(e)=>{setBody(e.target.value)}}/>\r\n        </label><br></br>\r\n\r\n        <label>\r\n        AuthorId :  \r\n           <input type=\"text\" name=\"authorId\" value={authorId} onChange={(e)=>{setAuthorid(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <label>\r\n        Tags :  \r\n           <input type=\"text\" name=\"tags\" value = {tags} onChange={(e)=>{setTags(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <label>\r\n        Category :  \r\n           <input type=\"text\" name=\"category\" value={category} onChange={(e)=>{setCategory(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <label>\r\n        Subcategory :  \r\n           <input type=\"text\" name=\"subcategory\" value={subcategory} onChange={(e)=>{setSubcategory(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <label>\r\n        isPublished :  \r\n           <input type=\"text\" name=\"isPublished\" value={isPublished} onChange={(e)=>{setIspublished(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <button className=\"button-33\" type=\"button\" onClick={Update} >Update</button>\r\n      </form>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Update","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Home.js",["103"],"import React,{useState} from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport pic from \"./image/superman.gif\"\r\n\r\n const Home = () => {\r\n  const history = useHistory();\r\n  \r\n  const[fname,setFname] = useState('')\r\n  const[lname,setLname] = useState('')\r\n  const[title,setTitle] = useState('')\r\n  const[email,setEmail] = useState('')\r\n  const[password,setPassword] = useState('')\r\n\r\n  let data  = {fname ,lname, title, email, password}\r\n  console.log(data)\r\n  \r\n\r\n  function Saveuser(e){\r\n    e.preventDefault();\r\n    let data  = {fname ,lname, title, email, password}\r\n    fetch(\"http://localhost:4000/authors\",{\r\n      method : \"POST\",\r\n      headers : {\r\n        \"Accept\" : \"application/json\",\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body : JSON.stringify(data)\r\n    }).then((result) =>{\r\n      result.json().then((resp) =>{\r\n        console.warn(\"resp\" , resp)\r\n\r\n        if(resp.status === true){\r\n          window.alert( resp.message );\r\n          console.log('Login Sucessfull '+ resp.message );\r\n          history.push(\"/blog\")\r\n            \r\n        } else{\r\n          window.alert( resp.message)\r\n            console.log('invalid '+ resp.message)\r\n        }\r\n      })\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"form\">\r\n      <div className=\"div1\">\r\n        <img src={pic} />\r\n        \r\n      </div>\r\n      <div className=\"div2\">\r\n        \r\n      <form >\r\n      <h1 style={{margin:\"20px\"}}>SignUp</h1>\r\n\r\n      <label> \r\n          Title :  \r\n           \r\n          <select value={title} onChange={(e)=>{setTitle(e.target.value)}} >\r\n          <option>select</option>\r\n            <option>Mr</option>\r\n            <option>Mrs</option>\r\n            <option>Miss</option>\r\n          </select>\r\n\r\n        </label>\r\n        <br></br>\r\n        <label>\r\n          Name :  \r\n           <input type=\"text\"  value={fname} onChange={(e) => setFname(e.target.value) } name=\"fname\"/>\r\n        </label><br></br>\r\n\r\n        <label>\r\n          Last Name :  \r\n           <input type=\"text\" name=\"lname\" value={lname} onChange={(e)=>{setLname(e.target.value)}}/>\r\n        </label><br></br>\r\n\r\n        \r\n\r\n        \r\n\r\n        <label>\r\n          Email :  \r\n           <input type=\"text\" name=\"email\" value = {email} onChange={(e)=>{setEmail(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <label>\r\n          Password :  \r\n           <input type=\"password\" name=\"password\" value={password} onChange={(e)=>{setPassword(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <button type=\"button\" className=\"button-33\" onClick={Saveuser}>SignUp</button>\r\n      </form>\r\n\r\n      <NavLink to=\"/Login\" >Login</NavLink>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Cblog.js",["104"],"import React,{useState} from \"react\";\r\nimport { useHistory} from \"react-router-dom\";\r\nimport pic from \"./image/superman.gif\"\r\n\r\n const Cblog = () => {\r\n\r\n  const history = useHistory();\r\n  const[title,setTitle] = useState('')\r\n  const[body,setBody] = useState('')\r\n  const[authorId,setAuthorid] = useState('')\r\n  const[tags,setTags] = useState([''])\r\n  const[category,setCategory] = useState('')\r\n  const[subcategory,setSubcategory] = useState([''])\r\n  const[isPublished,setIspublished] = useState('')\r\n  \r\n  console.warn( title ,body, authorId, tags, category, subcategory, isPublished)\r\n\r\n  function Saveuser(e){\r\n    e.preventDefault();\r\n    let data  = {title ,body, authorId, tags, category, subcategory, isPublished}\r\n    console.warn( title ,body, authorId, tags, category, subcategory, isPublished)\r\n\r\n    let token = localStorage.getItem('authortoken')\r\n    console.log(\"cblog\" , token)\r\n    console.log(\"data\", data)\r\n\r\n    fetch(\"http://localhost:4000/blogs\",{\r\n      method : \"POST\",\r\n      headers : {\r\n        \"Accept\" : \"application/json\",\r\n        \"Content-Type\" : \"application/json\",\r\n        \"x-api-key\" : token\r\n      },\r\n      body : JSON.stringify(data)\r\n    }).then((result) =>{\r\n      result.json().then((resp) =>{\r\n        console.warn(\"resp\" , resp)\r\n\r\n        if(resp.status === true){\r\n          window.alert( resp.message );\r\n          console.log(resp.message );\r\n          history.push(\"/blog\")\r\n            \r\n        } else{\r\n\r\n          window.alert( resp.message)\r\n            console.log('invalid data', resp)\r\n        }\r\n      })\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"div1\"><img src={pic} /></div>\r\n      <div className=\"div2\">\r\n      <form >\r\n        <label>\r\n        title :  \r\n           <input type=\"text\"  value={title} onChange={(e) => setTitle(e.target.value) } name=\"title\"/>\r\n        </label><br></br>\r\n\r\n        <label>\r\n        Body :  \r\n           <textarea type=\"text\" name=\"body\" value={body} onChange={(e)=>{setBody(e.target.value)}}/>\r\n        </label><br></br>\r\n\r\n        <label>\r\n        AuthorId :  \r\n           <input type=\"text\" name=\"authorId\" value={authorId} onChange={(e)=>{setAuthorid(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <label>\r\n        Tags :  \r\n           <input type=\"text\" name=\"tags\" value = {tags} onChange={(e)=>{setTags([e.target.value])}} />\r\n        </label><br></br>\r\n\r\n        <label>\r\n        Category :  \r\n           <input type=\"text\" name=\"category\" value={category} onChange={(e)=>{setCategory(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <label>\r\n        Subcategory :  \r\n           <input type=\"text\" name=\"subcategory\" value={subcategory} onChange={(e)=>{setSubcategory([e.target.value])}} />\r\n        </label><br></br>\r\n\r\n        <label>\r\n        isPublished :  \r\n        <select value={isPublished}  onChange={(e)=>{setIspublished(e.target.value)}} >\r\n        <option>select</option>\r\n        <option>false</option>\r\n        <option>true</option>\r\n        </select>\r\n          \r\n        </label><br></br>\r\n\r\n        <button type=\"button\" className=\"button-33\" onClick={Saveuser}>Create Blog</button>\r\n      </form>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cblog;\r\n","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\Pages\\Login.js",["105","106"],"import React,{useState, useContext} from \"react\";\r\nimport { NavLink , useHistory} from \"react-router-dom\";\r\nimport pic from \"./image/superman.gif\"\r\nimport addData from \"../redux/Action\"\r\n\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\n const Login = () => {\r\n const dispatch = useDispatch();\r\n\r\n\r\n    const history = useHistory();\r\n\r\n  const[email,setEmail] = useState('')\r\n  const[password,setPassword] = useState('')\r\n\r\n\r\n  \r\n \r\n\r\n\r\n  function Saveuser(e){\r\n    e.preventDefault();\r\n    let data  = { email, password}\r\n    console.warn( email, password)\r\n    \r\n    fetch(\"http://localhost:4000/login\",{\r\n      method : \"POST\",\r\n      headers : {\r\n        \"Accept\" : \"application/json\",\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body : JSON.stringify(data)\r\n    }).then((result) =>{\r\n      result.json().then((resp) =>{\r\n        console.warn(\"resp\" , resp)\r\n        \r\n        localStorage.setItem('authortoken', resp.data.token)\r\n\r\n        if(resp.status === true){\r\n         dispatch(addData(resp))\r\n          window.alert( resp.message );\r\n          console.log('Login Sucessfull '+ resp.message );\r\n          history.push(\"/blog\")\r\n            \r\n        } else{\r\n\r\n          window.alert( resp.message)\r\n            console.log('invalid '+ resp.message)\r\n        }\r\n        \r\n      })\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"form\">\r\n\r\n       <div className=\"div1\">\r\n       \r\n        <img src={pic} />\r\n\r\n        \r\n      </div>\r\n      <div className=\"div2\">\r\n      <form >\r\n        <h1>Login</h1>\r\n        <label>\r\n          Email :  \r\n           <input type=\"text\" name=\"email\" value = {email} onChange={(e)=>{setEmail(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <label>\r\n          Password :  \r\n           <input type=\"password\" name=\"password\" value={password} onChange={(e)=>{setPassword(e.target.value)}} />\r\n        </label><br></br>\r\n\r\n        <button type=\"button\" className=\"button-33\" onClick={Saveuser}>Login</button>\r\n      </form>\r\n      <NavLink to=\"/\" >Register</NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login ; ","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\redux\\Store.js",["107"],"import {createStore} from \"redux\"\r\nimport combineReducers from \"./RootReducer\"\r\n\r\n\r\nconst data = () =>{\r\n    return 100\r\n}\r\nconst store = createStore(combineReducers)\r\n\r\nexport default store;","C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\redux\\Action.js",[],"C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\redux\\RootReducer.js",[],"C:\\Users\\Dell\\Desktop\\MERN-blog\\Project-1-Blog\\client\\src\\components\\redux\\Reducer.js",[],{"ruleId":"108","severity":1,"message":"109","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":25},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":7,"column":7,"nodeType":"118","endLine":7,"endColumn":24},{"ruleId":"108","severity":1,"message":"119","line":9,"column":9,"nodeType":"110","messageId":"111","endLine":9,"endColumn":14},{"ruleId":"108","severity":1,"message":"120","line":8,"column":12,"nodeType":"110","messageId":"111","endLine":8,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":83,"column":29,"nodeType":"118","endLine":83,"endColumn":46},{"ruleId":"116","severity":1,"message":"117","line":51,"column":9,"nodeType":"118","endLine":51,"endColumn":26},{"ruleId":"116","severity":1,"message":"117","line":57,"column":29,"nodeType":"118","endLine":57,"endColumn":46},{"ruleId":"108","severity":1,"message":"121","line":1,"column":25,"nodeType":"110","messageId":"111","endLine":1,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":65,"column":9,"nodeType":"118","endLine":65,"endColumn":26},{"ruleId":"108","severity":1,"message":"122","line":5,"column":7,"nodeType":"110","messageId":"111","endLine":5,"endColumn":11},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["123"],"no-negated-in-lhs",["124"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'token' is assigned a value but never used.","'post' is assigned a value but never used.","'useContext' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]